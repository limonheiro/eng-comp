CCS PCM C Compiler, Version 5.008, 5967               21-mar-19 13:04

               Filename:   C:\Users\sky\Downloads\motorDC_PWM.lst

               ROM used:   171 words (2%)
                           Largest free fragment is 2048
               RAM used:   8 (2%) at main() level
                           9 (2%) worst case
               Stack used: 1 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   01A
0003:  NOP
.................... //#include "C:\Alberto\IFMT 2019 - I\Microcontroladores\Projetos CCS\MotorDC\motorDC_PWM.h" 
.................... #include <16F877A.h> 
.................... //////// Standard Header file for the PIC16F877A device //////////////// 
.................... #device PIC16F877A 
....................  
.................... #list 
....................  
.................... #device adc=10 
....................  
.................... #FUSES NOWDT                    //No Watch Dog Timer 
.................... #FUSES HS                       //High speed Osc (> 4mhz for PCM/PCH) (>10mhz for PCD) 
.................... #FUSES NOPUT                    //No Power Up Timer 
.................... #FUSES NOPROTECT                //Code not protected from reading 
.................... #FUSES NODEBUG                  //No Debug mode for ICD 
.................... #FUSES BROWNOUT                 //Reset when brownout detected 
.................... #FUSES NOLVP                    //No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
.................... #FUSES NOCPD                    //No EE protection 
.................... #FUSES NOWRT                    //Program memory not write protected 
....................  
.................... #use delay(clock=20000000) 
0004:  MOVLW  23
0005:  MOVWF  04
0006:  BCF    03.7
0007:  MOVF   00,W
0008:  BTFSC  03.2
0009:  GOTO   017
000A:  MOVLW  06
000B:  MOVWF  78
000C:  CLRF   77
000D:  DECFSZ 77,F
000E:  GOTO   00D
000F:  DECFSZ 78,F
0010:  GOTO   00C
0011:  MOVLW  7B
0012:  MOVWF  77
0013:  DECFSZ 77,F
0014:  GOTO   013
0015:  DECFSZ 00,F
0016:  GOTO   00A
0017:  BCF    0A.3
0018:  BCF    0A.4
0019:  GOTO   0A9 (RETURN)
....................  
.................... int16 value = 0; 
....................  
.................... void main() 
001A:  MOVF   03,W
001B:  ANDLW  1F
001C:  MOVWF  03
001D:  CLRF   21
001E:  CLRF   20
001F:  MOVLW  FF
0020:  MOVWF  22
0021:  BSF    03.5
0022:  BSF    1F.0
0023:  BSF    1F.1
0024:  BSF    1F.2
0025:  BCF    1F.3
0026:  MOVLW  07
0027:  MOVWF  1C
0028:  BCF    03.7
.................... { 
....................  
....................    setup_adc_ports(AN0); 
0029:  BCF    1F.0
002A:  BSF    1F.1
002B:  BSF    1F.2
002C:  BSF    1F.3
....................    setup_adc(ADC_CLOCK_DIV_16); 
002D:  BSF    1F.6
002E:  BCF    03.5
002F:  BSF    1F.6
0030:  BCF    1F.7
0031:  BSF    03.5
0032:  BSF    1F.7
0033:  BCF    03.5
0034:  BSF    1F.0
....................    setup_psp(PSP_DISABLED); 
0035:  BSF    03.5
0036:  BCF    09.4
....................    setup_spi(SPI_SS_DISABLED); 
0037:  BCF    03.5
0038:  BCF    14.5
0039:  BCF    22.5
003A:  MOVF   22,W
003B:  BSF    03.5
003C:  MOVWF  07
003D:  BCF    03.5
003E:  BSF    22.4
003F:  MOVF   22,W
0040:  BSF    03.5
0041:  MOVWF  07
0042:  BCF    03.5
0043:  BCF    22.3
0044:  MOVF   22,W
0045:  BSF    03.5
0046:  MOVWF  07
0047:  MOVLW  01
0048:  BCF    03.5
0049:  MOVWF  14
004A:  MOVLW  00
004B:  BSF    03.5
004C:  MOVWF  14
....................    setup_timer_0(RTCC_INTERNAL|RTCC_DIV_1); 
004D:  MOVF   01,W
004E:  ANDLW  C7
004F:  IORLW  08
0050:  MOVWF  01
....................    setup_timer_1(T1_DISABLED); 
0051:  BCF    03.5
0052:  CLRF   10
....................    setup_timer_2(T2_DIV_BY_16,255,1); 
0053:  MOVLW  00
0054:  MOVWF  78
0055:  IORLW  06
0056:  MOVWF  12
0057:  MOVLW  FF
0058:  BSF    03.5
0059:  MOVWF  12
....................    setup_ccp1(CCP_PWM); 
005A:  BCF    03.5
005B:  BCF    22.2
005C:  MOVF   22,W
005D:  BSF    03.5
005E:  MOVWF  07
005F:  BCF    03.5
0060:  BCF    07.2
0061:  MOVLW  0C
0062:  MOVWF  17
....................    set_pwm1_duty(512); 
0063:  MOVLW  80
0064:  MOVWF  15
0065:  MOVF   17,W
0066:  ANDLW  CF
0067:  MOVWF  17
....................    setup_comparator(NC_NC_NC_NC); 
0068:  MOVLW  07
0069:  BSF    03.5
006A:  MOVWF  1C
006B:  MOVF   05,W
006C:  MOVWF  05
006D:  MOVLW  10
006E:  MOVWF  77
006F:  DECFSZ 77,F
0070:  GOTO   06F
0071:  NOP
0072:  MOVF   1C,W
0073:  BCF    03.5
0074:  BCF    0D.6
....................    setup_vref(FALSE); 
0075:  BSF    03.5
0076:  CLRF   1D
....................  
....................    set_adc_channel(0); 
0077:  MOVLW  00
0078:  MOVWF  78
0079:  BCF    03.5
007A:  MOVF   1F,W
007B:  ANDLW  C7
007C:  IORWF  78,W
007D:  MOVWF  1F
....................    delay_us(50); 
007E:  MOVLW  52
007F:  MOVWF  77
0080:  DECFSZ 77,F
0081:  GOTO   080
0082:  GOTO   083
0083:  NOP
....................     
....................    while(true){ 
....................         value = read_adc(); 
0084:  BSF    1F.2
0085:  BTFSC  1F.2
0086:  GOTO   085
0087:  BSF    03.5
0088:  MOVF   1E,W
0089:  BCF    03.5
008A:  MOVWF  20
008B:  MOVF   1E,W
008C:  MOVWF  21
....................         delay_us(50); 
008D:  MOVLW  52
008E:  MOVWF  77
008F:  DECFSZ 77,F
0090:  GOTO   08F
0091:  GOTO   092
0092:  NOP
....................         set_pwm1_duty(value);  
0093:  MOVF   21,W
0094:  MOVWF  79
0095:  MOVF   20,W
0096:  MOVWF  78
0097:  RRF    79,F
0098:  RRF    78,F
0099:  RRF    79,F
009A:  RRF    78,F
009B:  RRF    79,F
009C:  MOVF   78,W
009D:  MOVWF  15
009E:  RRF    79,F
009F:  RRF    79,W
00A0:  ANDLW  30
00A1:  MOVWF  77
00A2:  MOVF   17,W
00A3:  ANDLW  CF
00A4:  IORWF  77,W
00A5:  MOVWF  17
....................         delay_ms(100); 
00A6:  MOVLW  64
00A7:  MOVWF  23
00A8:  GOTO   004
00A9:  GOTO   084
....................    } 
.................... } 
00AA:  SLEEP

Configuration Fuses:
   Word  1: 3F7A   HS NOWDT NOPUT BROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
